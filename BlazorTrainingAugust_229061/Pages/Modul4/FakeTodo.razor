@page "/todo"
@inject IHttpClientFactory client
<h3>FakeTodo</h3>

<div class="row">
    <div class="col">
      
            <div class="input-group mb-3">
                <input type="text" class="form-control" @bind="eingabe" @bind:event="oninput">
                <button class="btn btn-outline-secondary" type="submit">filter</button>
            </div>
       
    </div>
</div>
<div class="row">

    <div class="col">
        <ul class="list-group">
            @if (Liste == null)
            {
                <li class='list-group-item '>
                    keine Daten
                </li>
            }
            else
            {
                @foreach (var item in Liste.Where(x=>x.title.Contains(eingabe,StringComparison.InvariantCultureIgnoreCase)))
                {
                    <li class='list-group-item '>
                        @item.title
                    </li>
                }
            }
        </ul>
    </div>

</div>

@code {
    string eingabe = "";
    List<ToDoModel> Liste;
    protected override async Task OnInitializedAsync()
    {
        using (var http = client.CreateClient())
        {
            Liste = await http.GetFromJsonAsync<List<ToDoModel>>("https://jsonplaceholder.typicode.com/todos");
        }

    }

}
